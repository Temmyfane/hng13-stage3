events {
    worker_connections 1024;
}

http {
    # Custom log format with pool and upstream details
    log_format monitoring '{'
        '"time":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"request":"$request",'
        '"status":$status,'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"upstream_response_time":"$upstream_response_time",'
        '"request_time":$request_time,'
        '"pool":"$upstream_http_x_app_pool",'
        '"release":"$upstream_http_x_release_id"'
    '}';

    # Write logs to shared volume
    access_log /var/log/nginx/access.log monitoring;
    error_log /var/log/nginx/error.log warn;

    upstream backend {
        # Dynamic upstream configuration based on ACTIVE_POOL
        server app_${ACTIVE_POOL}:3000 max_fails=1 fail_timeout=5s;
        
        # Backup server (opposite of active pool)
        server app_${BACKUP_POOL}:3000 backup max_fails=1 fail_timeout=5s;
    }

    server {
        listen 8080;
        server_name localhost;

        proxy_connect_timeout 3s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;

        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;

        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass_request_headers on;
        }
    }
}